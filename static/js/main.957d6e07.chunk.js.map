{"version":3,"sources":["utils/resultsBuilder.js","utils/download.js","components/Results/Results.js","components/TestRunner/TestRunner.js","components/Home/Home.js","components/Scene/Scene.js","benchmarks/native-css/Container.js","benchmarks/native-css/Component.js","benchmarks/native-css/Probe.js","benchmarks/native-css/index.js","benchmarks/styled-components-mixed/theme.js","benchmarks/styled-components-mixed/Container.js","benchmarks/styled-components-mixed/Component.js","benchmarks/styled-components-mixed/Probe.js","benchmarks/styled-components-mixed/index.js","benchmarks/styled-components/theme.js","benchmarks/styled-components/Container.js","benchmarks/styled-components/Component.js","benchmarks/styled-components/Probe.js","benchmarks/styled-components/index.js","benchmarks/aphrodite/theme.js","benchmarks/aphrodite/Container.js","benchmarks/aphrodite/Component.js","benchmarks/aphrodite/Probe.js","benchmarks/aphrodite/index.js","benchmarks/react-jss/theme.js","benchmarks/react-jss/Container.js","benchmarks/react-jss/Component.js","benchmarks/react-jss/Probe.js","benchmarks/react-jss/index.js","App.js","serviceWorker.js","index.js"],"names":["resultsBuilder","name","resultsJson","localStorage","getItem","results","JSON","parse","length","rows","reRenderHeaders","Array","apply","map","Number","call","push","join","forEach","r","index","_unused","clear","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","Results","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","getCsv","csv","concat","clearResults","removeItem","setState","getResults","totalAvg","state","reduce","a","v","acc","value","toFixed","reRenderSum","i","reRenderCount","reRenderAvg","react_default","className","_this$getResults","Fragment","onClick","React","PureComponent","TestRunner","handleInputChange","event","target","defineProperty","runTest","url","URL","window","location","href","hash","searchParams","set","reloads","reRenders","numberOfComponents","version","description","onChange","Home","role","aria-label","components_TestRunner_TestRunner","components_Results_Results","parsedUrl","iterationDelay","parseInt","get","maxIterations","maxReloads","currentReload","Scene","onFinishRender","end","now","startRender","console","log","setTimeout","currentState","iteration","saveResults","reload","prevResultsJson","prevResults","setItem","stringify","componentDidUpdate","createdAt","Container","container","Component","component","Probe","probe","components","key","onAnimationStart","native_css_Container","_ref","children","Children","c","cloneElement","themeVariant","native_css_Component","placeholder","native_css_Probe","Test","components_Scene_Scene","styled_components_mixed_theme","label","color","input","backgroundColor","button","hover","styled_components_mixed_Container","styled_components_browser_esm","theme","styled","_templateObject","keyframes","Probe_templateObject","StyledComp","div","_templateObject2","styled_components_mixed_Probe","styled_components_theme","styled_components_Container","Component_templateObject","styled_components_Probe_templateObject","Probe_templateObject2","styled_components_Probe","Probe_StyledComp","ThemeContext","createContext","aphrodite_Container","Provider","context","css","styles","root","span","contextType","StyleSheet","create","padding","border","borderRadius","marginLeft","&:hover","cursor","sheet","animationName","from","to","animationDuration","react_jss_Container","lib","classes","injectSheet","@keyframes react-jss-probe-animation","animation","App","HashRouter","Switch","Route","exact","path","components_Home_Home","native_css","styled_components_mixed","styled_components","aphrodite","react_jss","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.957d6e07.chunk.js","sourcesContent":["export default name => {\r\n  try {\r\n    const resultsJson = localStorage.getItem(name);\r\n    let results = [];\r\n    if (resultsJson) results = JSON.parse(resultsJson);\r\n    if (results.length === 0) return \"\";\r\n  \r\n    const rows = [];\r\n    const reRenderHeaders = Array.apply(null, {\r\n      length: results[0].length\r\n    }).map(Number.call, Number);\r\n    rows.push(\r\n      \"Full render number,\" +\r\n        reRenderHeaders.join(\",\")\r\n    );\r\n  \r\n    results.forEach((r, index) => {\r\n      rows.push(index + 1 + \",\" + r.join(\",\"));\r\n    });\r\n  \r\n    return rows.join(\"\\r\\n\");\r\n  } catch {\r\n    localStorage.clear();\r\n    return \"\";\r\n  }\r\n  \r\n};\r\n","export default (filename, text) => {\r\n  var element = document.createElement(\"a\");\r\n  element.setAttribute(\r\n    \"href\",\r\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\r\n  );\r\n  element.setAttribute(\"download\", filename);\r\n\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n};\r\n","import React from \"react\";\r\nimport resultsBuilder from \"../../utils/resultsBuilder\";\r\nimport download from \"../../utils/download\";\r\n\r\nimport \"./results.css\";\r\nclass Results extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    const resultsJson = localStorage.getItem(props.name);\r\n    let results = [];\r\n    if (resultsJson) results = JSON.parse(resultsJson);\r\n    this.state = { results: results };\r\n  }\r\n\r\n  getCsv = () => {\r\n    const csv = resultsBuilder(this.props.name);\r\n    download(`results-${this.props.name}.csv`, csv);\r\n  };\r\n\r\n  clearResults = () => {\r\n    localStorage.removeItem(this.props.name);\r\n\r\n    this.setState({ results: [] });\r\n  };\r\n\r\n  getResults = () => {\r\n    try {\r\n      const totalSum = this.state.results.reduce(\r\n        (a, v) => a + v.reduce((acc, value) => acc + value, 0),\r\n        0\r\n      );\r\n      const totalAvg = (\r\n        totalSum /\r\n        (this.state.results.length * this.state.results[0].length)\r\n      ).toFixed(0);\r\n\r\n      const reRenderSum = this.state.results.reduce(\r\n        (acc, v) =>\r\n          acc + v.reduce((a, i, index) => (index === 0 ? a : a + i), 0),\r\n        0\r\n      );\r\n      const reRenderCount =\r\n        this.state.results.length * (this.state.results[0].length - 1);\r\n      const reRenderAvg = (reRenderSum / reRenderCount).toFixed(0);\r\n\r\n      return { totalAvg: totalAvg, reRenderCount: reRenderCount, reRenderAvg: reRenderAvg };\r\n    } catch {\r\n      this.clearResults();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.results.length === 0)\r\n      return (\r\n        <span className=\"NoResults\">No results available. Run test first.</span>\r\n      );\r\n\r\n    const { totalAvg, reRenderCount, reRenderAvg } = this.getResults();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"Results\">\r\n          First render time (avg of {this.state.results.length} renders):{\" \"}\r\n          <strong>{totalAvg} ms</strong>\r\n        </div>\r\n        <div className=\"Results\">\r\n          Re-render time (avg of {reRenderCount} re-renders):{\" \"}\r\n          <strong>{reRenderAvg} ms</strong>\r\n        </div>\r\n        <button className=\"ResultsButton\" onClick={this.getCsv}>\r\n          Download CSV\r\n        </button>\r\n        <button className=\"ResultsButton\" onClick={this.clearResults}>\r\n          Clean results\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Results;\r\n","import React from \"react\";\r\nimport \"./test-runner.css\";\r\n\r\nclass TestRunner extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { reRenders: 0, reloads: 10 };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  runTest = () => {\r\n    const url = new URL(`${window.location.href}`);\r\n    url.hash = `#/${this.props.name}`;\r\n    url.searchParams.set(\"reloads\", this.state.reloads);\r\n    url.searchParams.set(\"re-renders\", this.state.reRenders);\r\n    url.searchParams.set(\"noComponents\", this.props.numberOfComponents);\r\n    window.location.href = url.href;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"TestRunnerHeader\">\r\n          <strong>{this.props.name}</strong>\r\n          {this.props.version && (\r\n            <span className=\"version\">[v{this.props.version}]</span>\r\n          )}\r\n          <button onClick={this.runTest}>Run test</button>\r\n        </div>\r\n        <div className=\"TestRunnerDesc\">{this.props.description}</div>\r\n        <div className=\"TestRunner\">\r\n          <span>Full renders:</span>\r\n          <input\r\n            name=\"reloads\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.reloads}\r\n          />\r\n          <span> || Re-renders per load:</span>\r\n          <input\r\n            name=\"reRenders\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.reRenders}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestRunner;\r\n","import React from \"react\";\r\nimport Results from \"../Results/Results\";\r\nimport TestRunner from \"../TestRunner/TestRunner\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { numberOfComponents: 1000 };\r\n  }\r\n\r\n  handleInputChange = event => {\r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Home\">\r\n        <h1 className=\"Title\">\r\n          css-in-js-stress{\" \"}\r\n          <span role=\"img\" aria-label=\"Grinning Face With Sweat\">\r\n            😅\r\n          </span>\r\n        </h1>\r\n        <h4>Bunch of CSS-in-JS libraries compared for render times.</h4>\r\n        <p>\r\n          Benchmarks will run on clean page according to params provided for the\r\n          test. After desired number of full render cycles (clean landing /\r\n          re-render mounted component) full detailed times can be downloaded as\r\n          CSV file.\r\n        </p>\r\n        <p>\r\n          Note that implementations are assuming some theming (static for CSS,\r\n          dynamic for CSS-in-JS) so all implementations relay on ContextAPI /\r\n          class overrides for CSS to implement themes\r\n        </p>\r\n        <p>\r\n          Running on react@16.6.3 / react-dom@16.6.3\r\n          <br />\r\n          Wanna add a lib / update version? 👉🏻{\" \"}\r\n          <a href=\"https://github.com/matmalkowski/css-in-js-stress\">\r\n            submit a PR\r\n          </a>\r\n        </p>\r\n        <div className=\"Settings\">\r\n          <div className=\"SettingsHeader\">Settings</div>\r\n          <span>How many components should be rendered?</span>\r\n          <input\r\n            name=\"numberOfComponents\"\r\n            onChange={this.handleInputChange}\r\n            value={this.state.numberOfComponents}\r\n          />\r\n        </div>\r\n        <div className=\"LibBlock\">\r\n          <TestRunner\r\n            name=\"native-css\"\r\n            description=\"Simple CSS styles for layout + additional classes for theme only colors\"\r\n            numberOfComponents={this.state.numberOfComponents}\r\n          />\r\n          <Results name=\"native-css\" />\r\n        </div>\r\n        <div className=\"LibBlock\">\r\n          <TestRunner\r\n            name=\"styled-components-mixed\"\r\n            version=\"4.1.2\"\r\n            description=\"Simple CSS styles for layout + StyledComponents wrapper for theme colors.\"\r\n            numberOfComponents={this.state.numberOfComponents}\r\n          />\r\n          <Results name=\"styled-components-mixed\" />\r\n        </div>\r\n        <div className=\"LibBlock\">\r\n          <TestRunner\r\n            name=\"styled-components\"\r\n            version=\"4.1.2\"\r\n            description=\"Pure StyledComponents with theme support\"\r\n            numberOfComponents={this.state.numberOfComponents}\r\n          />\r\n          <Results name=\"styled-components\" />\r\n        </div>\r\n        <div className=\"LibBlock\">\r\n          <TestRunner\r\n            name=\"aphrodite\"\r\n            version=\"2.2.3\"\r\n            description=\"Pure aphrodite with theme support implemented with ContexAPI wrapper.\"\r\n            numberOfComponents={this.state.numberOfComponents}\r\n          />\r\n          <Results name=\"aphrodite\" />\r\n        </div>\r\n        <div className=\"LibBlock\">\r\n          <TestRunner\r\n            name=\"react-jss\"\r\n            version=\"8.6.1\"\r\n            description=\"Pure react-jss with in-build theme support\"\r\n            numberOfComponents={this.state.numberOfComponents}\r\n          />\r\n          <Results name=\"react-jss\" />\r\n        </div>\r\n        <div className=\"Footer\">\r\n          <div>\r\n            Hosted by <a href=\"https://pages.github.com/\">GitHub</a>\r\n          </div>\r\n          <div>\r\n            {\" \"}\r\n            Made with{\" \"}\r\n            <span role=\"img\" aria-label=\"Love Heart\">\r\n              ❤️\r\n            </span>{\" \"}\r\n            by Maciej Malkowski (\r\n            <a href=\"https://github.com/matmalkowski\">@matmalkowski</a>){\" \"}\r\n          </div>\r\n          <div className=\"version\">[version 0.7.0]</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { PureComponent } from \"react\";\r\nimport now from \"performance-now\";\r\n\r\nvar parsedUrl = new URL(window.location.href);\r\n\r\nconst iterationDelay = 10;\r\nconst numberOfComponents =\r\n  parseInt(parsedUrl.searchParams.get(\"noComponents\")) || 1;\r\nconst maxIterations = parseInt(parsedUrl.searchParams.get(\"re-renders\")) || 0;\r\nconst maxReloads = parseInt(parsedUrl.searchParams.get(\"reloads\")) || 1;\r\nconst currentReload =\r\n  parseInt(parsedUrl.searchParams.get(\"current-reload\")) || 1;\r\n\r\nclass Scene extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { iteration: 0 };\r\n    this.createdAt = now();\r\n    this.results = [];\r\n    if (currentReload === 1) {\r\n      localStorage.removeItem(this.props.name);\r\n    }\r\n  }\r\n\r\n  onFinishRender = () => {\r\n    const end = now();\r\n    this.results.push(end - this.startRender);\r\n    console.log(this.results, 'onFinishRender');\r\n    if (this.results.length < maxIterations) {     \r\n      setTimeout(() => {\r\n        this.setState(currentState => ({\r\n          iteration: currentState.iteration + 1\r\n        }));\r\n      }, iterationDelay);\r\n    } else {\r\n      this.saveResults();\r\n      this.reload();\r\n    }\r\n  }\r\n\r\n  saveResults = () => {   \r\n    const prevResultsJson = localStorage.getItem(this.props.name);\r\n    let prevResults = [];\r\n    if (prevResultsJson) prevResults = JSON.parse(prevResultsJson);\r\n    prevResults.push(this.results);\r\n    localStorage.setItem(this.props.name, JSON.stringify(prevResults));\r\n  };\r\n\r\n  reload = () => {\r\n    if (currentReload < maxReloads) {\r\n      parsedUrl.searchParams.set(\"current-reload\", currentReload + 1);\r\n      window.location.href = parsedUrl.href;\r\n    } else {\r\n      window.location.href = \"/css-in-js-stress/#\";\r\n    }\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.onFinishRender();\r\n  }\r\n\r\n  render() {\r\n    const Container = this.props.container;\r\n    const Component = this.props.component;\r\n    const Probe = this.props.probe;\r\n\r\n    const components = [];\r\n    for (let i = 0; i < numberOfComponents; i++) {\r\n      components.push(\r\n        <Component text={`${this.state.iteration}_${i}`} key={i} />\r\n      );\r\n    }\r\n    this.startRender = now();\r\n    return (\r\n      <React.Fragment>\r\n        <Container>{components}</Container>\r\n        <Probe onAnimationStart={this.onFinishRender}></Probe>        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Scene;\r\n","import React from \"react\";\r\n\r\nexport default ({ children }) => (\r\n  <React.Fragment>\r\n    {React.Children.map(children, c =>\r\n      React.cloneElement(c, { themeVariant: \"purple\" })\r\n    )}\r\n  </React.Fragment>\r\n);\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default ({ text, themeVariant }) => {\r\n  return (\r\n    <div className={`search-box theme-variant-${themeVariant}`}>\r\n      <span>{text}: </span>\r\n      <input placeholder=\"input search value\" />\r\n      <button>Search</button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./probe.css\";\r\n\r\nexport default ({ onAnimationStart }) => {\r\n  return (\r\n    <div onAnimationStart={onAnimationStart} className=\"probe\">\r\n      probe\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Scene from \"../../components/Scene/Scene\";\r\n\r\nimport Container from \"./Container\";\r\nimport Component from \"./Component\";\r\nimport Probe from \"./Probe\";\r\n\r\nconst Test = () => (\r\n  <Scene\r\n    container={Container}\r\n    component={Component}\r\n    probe={Probe}\r\n    name=\"native-css\"\r\n  />\r\n);\r\n\r\nexport default Test;\r\n","export default {\r\n  label: {\r\n    color: \"#9c27b0\"\r\n  },\r\n  input: {\r\n    color: \"#ba68c8\",\r\n    backgroundColor: \"#e1bee7\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"#9c27b0\",\r\n    hover: \"#ab47bc\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nexport default ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <div>{children}</div>\r\n  </ThemeProvider>\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./styles.css\";\r\n\r\nconst Component = ({ text, className }) => {\r\n  return (\r\n    <div className={`search-box ${className}`}>\r\n      <span>{text}: </span>\r\n      <input placeholder=\"input search value\" />\r\n      <button>Search</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default styled(Component)`\r\n  span {\r\n    color: ${props => props.theme.label.color};\r\n  }\r\n  input {\r\n    color: ${props => props.theme.input.color};\r\n    background-color: ${props => props.theme.input.backgroundColor};\r\n  }\r\n  button {\r\n    color: ${props => props.theme.button.color};\r\n    background-color: ${props => props.theme.button.backgroundColor};\r\n    &:hover {\r\n      background-color: ${props => props.theme.button.hover};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst probe = keyframes`\r\n  from {\r\n    color: red;\r\n  }\r\n\r\n  to {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst StyledComp = styled.div`\r\n  animation: ${probe} 1s;\r\n`;\r\n\r\nexport default ({ onAnimationStart }) => (\r\n  <StyledComp onAnimationStart={onAnimationStart}>probe</StyledComp>\r\n);\r\n","import React from \"react\";\r\nimport Scene from \"../../components/Scene/Scene\";\r\n\r\nimport Container from \"./Container\";\r\nimport Component from \"./Component\";\r\nimport Probe from \"./Probe\";\r\n\r\nconst Test = () => (\r\n  <Scene\r\n    container={Container}\r\n    component={Component}\r\n    probe={Probe}\r\n    name=\"styled-components-mixed\"\r\n  />\r\n);\r\n\r\nexport default Test;\r\n","export default {\r\n  label: {\r\n    color: \"#9c27b0\"\r\n  },\r\n  input: {\r\n    color: \"#ba68c8\",\r\n    backgroundColor: \"#e1bee7\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"#9c27b0\",\r\n    hover: \"#ab47bc\"\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nexport default ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <div>{children}</div>\r\n  </ThemeProvider>\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Component = ({ text, className }) => {\r\n  return (\r\n    <div className={className}>\r\n      <span>{text}: </span>\r\n      <input placeholder=\"input search value\" />\r\n      <button>Search</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default styled(Component)`\r\n  display: inline-block;\r\n  padding: 5px;\r\n\r\n  span {\r\n    color: ${props => props.theme.label.color};\r\n  }\r\n  input {\r\n    padding: 2px 5px;\r\n    border: none;\r\n    color: ${props => props.theme.input.color};\r\n    background-color: ${props => props.theme.input.backgroundColor};\r\n  }\r\n  button {\r\n    padding: 5px 10px;\r\n    border: none;\r\n    border-radius: 5px;\r\n    margin-left: 5px;\r\n    color: ${props => props.theme.button.color};\r\n    background-color: ${props => props.theme.button.backgroundColor};\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: ${props => props.theme.button.hover};\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst probe = keyframes`\r\n  from {\r\n    color: red;\r\n  }\r\n\r\n  to {\r\n    color: blue;\r\n  }\r\n`;\r\n\r\nconst StyledComp = styled.div`\r\n  animation: ${probe} 1s;\r\n`;\r\n\r\nexport default ({ onAnimationStart }) => (\r\n  <StyledComp onAnimationStart={onAnimationStart}>probe</StyledComp>\r\n);\r\n","import React from \"react\";\r\nimport Scene from \"../../components/Scene/Scene\";\r\n\r\nimport Container from \"./Container\";\r\nimport Component from \"./Component\";\r\nimport Probe from \"./Probe\";\r\n\r\nconst Test = () => (\r\n  <Scene\r\n    container={Container}\r\n    component={Component}\r\n    probe={Probe}\r\n    name=\"styled-components\"\r\n  />\r\n);\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\n\r\nconst theme = {\r\n  label: {\r\n    color: \"#9c27b0\"\r\n  },\r\n  input: {\r\n    color: \"#ba68c8\",\r\n    backgroundColor: \"#e1bee7\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"#9c27b0\",\r\n    hover: \"#ab47bc\"\r\n  }\r\n};\r\n\r\nexport const ThemeContext = React.createContext(theme);\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport theme, { ThemeContext } from \"./theme\";\r\n\r\nexport default ({ children }) => (\r\n  <ThemeContext.Provider value={theme}>\r\n    <div>{children}</div>\r\n  </ThemeContext.Provider>\r\n);\r\n","import React from \"react\";\r\nimport { StyleSheet, css } from \"aphrodite\";\r\nimport { ThemeContext } from \"./theme\";\r\n\r\nclass Component extends React.PureComponent {\r\n  render() {\r\n    const theme = this.context;\r\n    return (\r\n      <div className={css(styles(theme).root)}>\r\n        <span className={css(styles(theme).span)}>{this.props.text}: </span>\r\n        <input\r\n          className={css(styles(theme).input)}\r\n          placeholder=\"input search value\"\r\n        />\r\n        <button className={css(styles(theme).button)}>Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nComponent.contextType = ThemeContext;\r\nexport default Component;\r\n\r\nconst styles = theme =>\r\n  StyleSheet.create({\r\n    root: {\r\n      display: \"inline-block\",\r\n      padding: \"5px\"\r\n    },\r\n\r\n    span: {\r\n      color: theme.label.color\r\n    },\r\n    input: {\r\n      padding: \"2px 5px\",\r\n      border: \"none\",\r\n      color: theme.input.color,\r\n      backgroundColor: theme.input.backgroundColor\r\n    },\r\n    button: {\r\n      padding: \"5px 10px\",\r\n      border: \"none\",\r\n      borderRadius: \"5px\",\r\n      marginLeft: \"5px\",\r\n      color: theme.button.color,\r\n      backgroundColor: theme.button.backgroundColor,\r\n\r\n      \"&:hover\": {\r\n        cursor: \"pointer\",\r\n        backgroundColor: theme.button.hover\r\n      }\r\n    }\r\n  });\r\n","import React from \"react\";\r\nimport { StyleSheet, css } from \"aphrodite/\";\r\n\r\nconst sheet = StyleSheet.create({\r\n  probe: {\r\n    animationName: [\r\n      {\r\n        from: {\r\n          color: \"red\"\r\n        },\r\n\r\n        to: {\r\n          color: \"blue\"\r\n        }\r\n      }\r\n    ],\r\n    animationDuration: \"1s\"\r\n  }\r\n});\r\n\r\nconst Probe = ({ onAnimationStart }) => {\r\n  return (\r\n    <div onAnimationStart={onAnimationStart} className={css(sheet.probe)} />\r\n  );\r\n};\r\n\r\nexport default Probe;\r\n","import React from \"react\";\r\nimport Scene from \"../../components/Scene/Scene\";\r\n\r\nimport Container from \"./Container\";\r\nimport Component from \"./Component\";\r\nimport Probe from \"./Probe\";\r\n\r\nconst Test = () => (\r\n  <Scene\r\n    container={Container}\r\n    component={Component}\r\n    probe={Probe}\r\n    name=\"aphrodite\"\r\n  />\r\n);\r\n\r\nexport default Test;\r\n","const theme = {\r\n  label: {\r\n    color: \"#9c27b0\"\r\n  },\r\n  input: {\r\n    color: \"#ba68c8\",\r\n    backgroundColor: \"#e1bee7\"\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"#9c27b0\",\r\n    hover: \"#ab47bc\"\r\n  }\r\n};\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport theme from \"./theme\";\r\nimport { ThemeProvider } from \"react-jss\";\r\n\r\nexport default ({ children }) => (\r\n  <ThemeProvider theme={theme}>\r\n    <div>{children}</div>\r\n  </ThemeProvider>\r\n);\r\n","import React from \"react\";\r\nimport injectSheet from \"react-jss\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"inline-block\",\r\n    padding: \"5px\"\r\n  },\r\n\r\n  span: {\r\n    color: theme.label.color\r\n  },\r\n  input: {\r\n    padding: \"2px 5px\",\r\n    border: \"none\",\r\n    color: theme.input.color,\r\n    backgroundColor: theme.input.backgroundColor\r\n  },\r\n  button: {\r\n    padding: \"5px 10px\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    marginLeft: \"5px\",\r\n    color: theme.button.color,\r\n    backgroundColor: theme.button.backgroundColor,\r\n\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      backgroundColor: theme.button.hover\r\n    }\r\n  }\r\n});\r\n\r\nclass Component extends React.PureComponent {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <span className={classes.span}>{this.props.text}: </span>\r\n        <input className={classes.input} placeholder=\"input search value\" />\r\n        <button className={classes.button}>Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectSheet(styles)(Component);\r\n","import React from \"react\";\r\nimport injectSheet from \"react-jss\";\r\n\r\nconst styles = {\r\n  \"@keyframes react-jss-probe-animation\": {\r\n    from: {\r\n      color: \"red\"\r\n    },\r\n\r\n    to: {\r\n      color: \"blue\"\r\n    }\r\n  },\r\n  probe: {\r\n    animation: \"1s react-jss-probe-animation\"\r\n  }\r\n};\r\n\r\nconst Probe = ({ classes, children, onAnimationStart }) => {\r\n  return (\r\n    <div className={classes.probe} onAnimationStart={onAnimationStart}>\r\n      Probe\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default injectSheet(styles)(Probe);\r\n","import React from \"react\";\r\nimport Scene from \"../../components/Scene/Scene\";\r\n\r\nimport Container from \"./Container\";\r\nimport Component from \"./Component\";\r\nimport Probe from \"./Probe\";\r\n\r\nconst Test = () => (\r\n  <Scene\r\n    container={Container}\r\n    component={Component}\r\n    probe={Probe}\r\n    name=\"react-jss\"\r\n  />\r\n);\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\n\r\nimport NativeCss from \"./benchmarks/native-css\";\r\nimport StyledComponentsMixed from \"./benchmarks/styled-components-mixed\";\r\nimport StyledComponents from \"./benchmarks/styled-components\";\r\nimport Aphrodite from \"./benchmarks/aphrodite\";\r\nimport ReactJss from \"./benchmarks/react-jss\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={() => <Home />} />\r\n          <Route exact path=\"/native-css/\" component={() => <NativeCss />} />\r\n          <Route\r\n            exact\r\n            path=\"/styled-components-mixed/\"\r\n            component={() => <StyledComponentsMixed />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/styled-components/\"\r\n            component={() => <StyledComponents />}\r\n          />\r\n          <Route exact path=\"/aphrodite/\" component={() => <Aphrodite />} />\r\n          <Route exact path=\"/react-jss/\" component={() => <ReactJss />} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}