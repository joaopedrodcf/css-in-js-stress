{"version":3,"sources":["utils/resultsBuilder.js","utils/download.js","components/Results/Results.js","components/TestRunner/TestRunner.js","components/Home/Home.js","components/Scene/Scene.js","benchmarks/native-css/Container.js","benchmarks/native-css/Component.js","benchmarks/native-css/index.js","benchmarks/styled-components-mixed/theme.js","benchmarks/styled-components-mixed/Container.js","benchmarks/styled-components-mixed/Component.js","benchmarks/styled-components-mixed/index.js","benchmarks/styled-components/theme.js","benchmarks/styled-components/Container.js","benchmarks/styled-components/Component.js","benchmarks/styled-components/index.js","App.js","serviceWorker.js","index.js"],"names":["resultsBuilder","name","resultsJson","localStorage","getItem","results","JSON","parse","rows","reloadsHeaders","Array","apply","length","map","Number","call","push","join","r","total","iterationCount","iterations","_loop","i","download","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","Results","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","getCsv","csv","concat","clearResults","removeItem","setState","state","react_default","a","className","totalAvg","reduce","acc","v","toFixed","reRenderSum","reRenderCount","reRenderAvg","Fragment","onClick","React","PureComponent","TestRunner","handleInputChange","event","target","value","defineProperty","runTest","url","URL","window","location","href","hash","searchParams","set","reloads","reRenders","numberOfComponents","version","description","onChange","Home","role","aria-label","components_TestRunner_TestRunner","components_Results_Results","parsedUrl","iterationDelay","parseInt","get","themeVariant","maxIterations","maxReloads","currentReload","Scene","startNextIteration","end","now","iteration","startRender","setTimeout","currentState","finished","saveResults","reload","save","createdAt","prevResultsJson","prevResults","setItem","stringify","componentDidMount","componentDidUpdate","Container","container","Component","component","components","key","native_css_Container","_ref","children","Children","c","cloneElement","native_css_Component","placeholder","Test","components_Scene_Scene","theme","label","color","input","backgroundColor","button","hover","styled_components_mixed_Container","styled_components_browser_esm","styled","_templateObject","styled_components_theme","styled_components_Container","Component_templateObject","App","HashRouter","Switch","Route","exact","path","components_Home_Home","native_css","styled_components_mixed","styled_components","Boolean","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c579e059.chunk.js","sourcesContent":["export default name => {\n  const resultsJson = localStorage.getItem(name);\n  let results = [];\n  if (resultsJson) results = JSON.parse(resultsJson);\n\n  const rows = [];\n  const reloadsHeaders = Array.apply(null, { length: results.length }).map(\n    Number.call,\n    Number\n  );\n  rows.push(\"Page load,\" + reloadsHeaders.join(\",\"));\n\n  rows.push(\"Total,\" + results.map(r => r.total).join(\",\"));\n  rows.push(\"Iterations\\r\\n\");\n  const iterationCount = results[0].iterations.length;\n\n  for (let i = 0; i < iterationCount; i++) {\n    rows.push(i + 1 + \",\" + results.map(r => r.iterations[i]).join(\",\"));\n  }\n  return rows.join(\"\\r\\n\");\n};\n","export default (filename, text) => {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n};\n","import React from \"react\";\nimport resultsBuilder from \"../../utils/resultsBuilder\";\nimport download from \"../../utils/download\";\n\nimport \"./results.css\";\nclass Results extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const resultsJson = localStorage.getItem(props.name);\n    let results = [];\n    if (resultsJson) results = JSON.parse(resultsJson);\n    this.state = { results: results };\n  }\n\n  getCsv = () => {\n    const csv = resultsBuilder(this.props.name);\n    download(`results-${this.props.name}.csv`, csv);\n  };\n\n  clearResults = () => {\n    localStorage.removeItem(this.props.name);\n\n    this.setState({ results: [] });\n  };\n\n  render() {\n    if (this.state.results.length === 0)\n      return (\n        <span className=\"NoResults\">No results available. Run test first.</span>\n      );\n\n    const totalSum = this.state.results.reduce((acc, v) => acc + v.total, 0);\n    const totalAvg = (totalSum / this.state.results.length).toFixed(0);\n\n    const reRenderSum = this.state.results.reduce(\n      (acc, v) => acc + v.iterations.reduce((a, i) => a + i, 0),\n      0\n    );\n    const reRenderCount =\n      this.state.results.length * this.state.results[0].iterations.length;\n    const reRenderAvg = (reRenderSum / reRenderCount).toFixed(0);\n\n    return (\n      <React.Fragment>\n        <div className=\"Results\">\n          First render time (avg of {this.state.results.length} renders):{\" \"}\n          <strong>{totalAvg} ms</strong>\n        </div>\n        <div className=\"Results\">\n          Re-render time (avg of {reRenderCount} re-renders):{\" \"}\n          <strong>{reRenderAvg} ms</strong>\n        </div>\n        <button className=\"ResultsButton\" onClick={this.getCsv}>\n          Download CSV\n        </button>\n        <button className=\"ResultsButton\" onClick={this.clearResults}>\n          Clean results\n        </button>\n      </React.Fragment>\n    );\n  }\n}\nexport default Results;\n","import React from \"react\";\nimport \"./test-runner.css\";\n\nclass TestRunner extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { reRenders: 0, reloads: 10 };\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({ [name]: value });\n  };\n\n  runTest = () => {\n    const url = new URL(`${window.location.href}`);\n    url.hash = `#/${this.props.name}`;\n    url.searchParams.set(\"reloads\", this.state.reloads);\n    url.searchParams.set(\"re-renders\", this.state.reRenders);\n    url.searchParams.set(\"noComponents\", this.props.numberOfComponents);\n    window.location.href = url.href;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"TestRunnerHeader\">\n          <strong>{this.props.name}</strong>\n          {this.props.version && (\n            <span className=\"version\">[v{this.props.version}]</span>\n          )}\n          <button onClick={this.runTest}>Run test</button>\n        </div>\n        <div className=\"TestRunnerDesc\">{this.props.description}</div>\n        <div className=\"TestRunner\">\n          <span>Full renders:</span>\n          <input\n            name=\"reloads\"\n            onChange={this.handleInputChange}\n            value={this.state.reloads}\n          />\n          <span> || Re-renders per load:</span>\n          <input\n            name=\"reRenders\"\n            onChange={this.handleInputChange}\n            value={this.state.reRenders}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TestRunner;\n","import React from \"react\";\nimport Results from \"../Results/Results\";\nimport TestRunner from \"../TestRunner/TestRunner\";\n\nimport \"./home.css\";\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { numberOfComponents: 5000 };\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <h1 className=\"Title\">\n          css-in-js-stress{\" \"}\n          <span role=\"img\" aria-label=\"Grinning Face With Sweat\">\n            😅\n          </span>\n        </h1>\n        <h4>Bunch of CSS-in-JS libraries compared for render times.</h4>\n        <p>\n          Benchmarks will run on clean page according to params provided for the\n          test. After desired number of full render cycles (clean landing /\n          re-render mounted component) full detailed times can be downloaded as\n          CSV file.\n        </p>\n        <p>\n          Note that implementations are assuming some theming (static for CSS,\n          dynamic for CSS-in-JS) so all implementations relay on ContextAPI /\n          class overrides for CSS to implement themes\n        </p>\n        <p>\n          Running on react@16.6.3 / react-dom@16.6.3\n          <br />\n          Wanna add a lib / update version? 👉🏻{\" \"}\n          <a href=\"https://github.com/matmalkowski/css-in-js-stress\">\n            submit a PR\n          </a>\n        </p>\n        <div className=\"Settings\">\n          <div className=\"SettingsHeader\">Settings</div>\n          <span>How many components should be rendered?</span>\n          <input\n            name=\"numberOfComponents\"\n            onChange={this.handleInputChange}\n            value={this.state.numberOfComponents}\n          />\n        </div>\n        <div className=\"LibBlock\">\n          <TestRunner\n            name=\"native-css\"\n            description=\"Simple CSS styles for layout + additional classes for theme only colors\"\n            numberOfComponents={this.state.numberOfComponents}\n          />\n          <Results name=\"native-css\" />\n        </div>\n        <div className=\"LibBlock\">\n          <TestRunner\n            name=\"styled-components-mixed\"\n            version=\"4.1.2\"\n            description=\"Simple CSS styles for layout + StyledComponents wrapper for theme colors.\"\n            numberOfComponents={this.state.numberOfComponents}\n          />\n          <Results name=\"styled-components-mixed\" />\n        </div>\n        <div className=\"LibBlock\">\n          <TestRunner\n            name=\"styled-components\"\n            version=\"4.1.2\"\n            description=\"Pure StyledComponents with theme support\"\n            numberOfComponents={this.state.numberOfComponents}\n          />\n          <Results name=\"styled-components\" />\n        </div>\n        <div className=\"Footer\">\n          <div>\n            Hosted by <a href=\"https://pages.github.com/\">GitHub</a>\n          </div>\n          <div>\n            {\" \"}\n            Made with{\" \"}\n            <span role=\"img\" aria-label=\"Love Heart\">\n              ❤️\n            </span>{\" \"}\n            by Maciej Malkowski (\n            <a href=\"https://github.com/matmalkowski\">@matmalkowski</a>){\" \"}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { PureComponent } from \"react\";\nimport now from \"performance-now\";\n\nvar parsedUrl = new URL(window.location.href);\n\nconst iterationDelay = 10;\nconst numberOfComponents =\n  parseInt(parsedUrl.searchParams.get(\"noComponents\")) || 5000;\nconst themeVariant = parsedUrl.searchParams.get(\"theme\") || \"purple\";\nconst maxIterations = parseInt(parsedUrl.searchParams.get(\"re-renders\")) || 0;\nconst maxReloads = parseInt(parsedUrl.searchParams.get(\"reloads\")) || 1;\nconst currentReload =\n  parseInt(parsedUrl.searchParams.get(\"current-reload\")) || 1;\n\nclass Scene extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { iteration: 0 };\n    this.createdAt = now();\n    this.results = [];\n    if (currentReload === 1) {\n      localStorage.removeItem(this.props.name);\n    }\n  }\n\n  startNextIteration = () => {\n    this.end = now();\n    if (this.state.iteration < maxIterations) {\n      this.results.push(this.end - this.startRender);\n      setTimeout(() => {\n        this.setState(currentState => ({\n          iteration: currentState.iteration + 1\n        }));\n      }, iterationDelay);\n    } else {\n      this.finished = now();\n      this.saveResults();\n      this.reload();\n    }\n  };\n\n  saveResults = () => {\n    const save = {\n      iterations: this.results,\n      total: this.finished - this.createdAt - maxIterations * iterationDelay\n    };\n    const prevResultsJson = localStorage.getItem(this.props.name);\n    let prevResults = [];\n    if (prevResultsJson) prevResults = JSON.parse(prevResultsJson);\n    prevResults.push(save);\n    localStorage.setItem(this.props.name, JSON.stringify(prevResults));\n  };\n\n  reload = () => {\n    if (currentReload < maxReloads) {\n      parsedUrl.searchParams.set(\"current-reload\", currentReload + 1);\n      window.location.href = parsedUrl.href;\n    } else {\n      window.location.href = \"/css-in-js-stress/#\";\n    }\n  };\n\n  componentDidMount = () => {\n    this.startNextIteration();\n  };\n\n  componentDidUpdate = () => {\n    this.startNextIteration();\n  };\n\n  render() {\n    const Container = this.props.container;\n    const Component = this.props.component;\n\n    const components = [];\n    for (let i = 0; i < numberOfComponents; i++) {\n      components.push(\n        <Component text={`${this.state.iteration}_${i}`} key={i} />\n      );\n    }\n    this.startRender = now();\n    return <Container themeVariant={themeVariant}>{components}</Container>;\n  }\n}\n\nexport default Scene;\n","import React from \"react\";\n\nexport default ({ children, themeVariant }) => (\n  <React.Fragment>\n    {React.Children.map(children, c =>\n      React.cloneElement(c, { themeVariant: themeVariant })\n    )}\n  </React.Fragment>\n);\n","import React from \"react\";\nimport \"./styles.css\";\n\nexport default ({ text, themeVariant }) => {\n  return (\n    <div className={`search-box theme-variant-${themeVariant}`}>\n      <span>{text}: </span>\n      <input placeholder=\"input search value\" />\n      <button>Search</button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Scene from \"../../components/Scene/Scene\";\n\nimport Container from \"./Container\";\nimport Component from \"./Component\";\n\nconst Test = () => (\n  <Scene container={Container} component={Component} name=\"native-css\" />\n);\n\nexport default Test;\n","export default {\n  label: {\n    color: \"#9c27b0\"\n  },\n  input: {\n    color: \"#ba68c8\",\n    backgroundColor: \"#e1bee7\"\n  },\n  button: {\n    color: \"white\",\n    backgroundColor: \"#9c27b0\",\n    hover: \"#ab47bc\"\n  }\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\n\nexport default ({ children, themeVariant }) => (\n  <ThemeProvider theme={theme}>\n    <div>{children}</div>\n  </ThemeProvider>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport \"./styles.css\";\n\nconst Component = ({ text, className }) => {\n  return (\n    <div className={`search-box ${className}`}>\n      <span>{text}: </span>\n      <input placeholder=\"input search value\" />\n      <button>Search</button>\n    </div>\n  );\n};\n\nexport default styled(Component)`\n  span {\n    color: ${props => props.theme.label.color};\n  }\n  input {\n    color: ${props => props.theme.input.color};\n    background-color: ${props => props.theme.input.backgroundColor};\n  }\n  button {\n    color: ${props => props.theme.button.color};\n    background-color: ${props => props.theme.button.backgroundColor};\n    &:hover {\n      background-color: ${props => props.theme.button.hover};\n    }\n  }\n`;\n","import React from \"react\";\nimport Scene from \"../../components/Scene/Scene\";\n\nimport Container from \"./Container\";\nimport Component from \"./Component\";\n\nconst Test = () => (\n  <Scene\n    container={Container}\n    component={Component}\n    name=\"styled-components-mixed\"\n  />\n);\n\nexport default Test;\n","export default {\n  label: {\n    color: \"#9c27b0\"\n  },\n  input: {\n    color: \"#ba68c8\",\n    backgroundColor: \"#e1bee7\"\n  },\n  button: {\n    color: \"white\",\n    backgroundColor: \"#9c27b0\",\n    hover: \"#ab47bc\"\n  }\n};\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\n\nexport default ({ children, themeVariant }) => (\n  <ThemeProvider theme={theme}>\n    <div>{children}</div>\n  </ThemeProvider>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Component = ({ text, className }) => {\n  return (\n    <div className={className}>\n      <span>{text}: </span>\n      <input placeholder=\"input search value\" />\n      <button>Search</button>\n    </div>\n  );\n};\n\nexport default styled(Component)`\n  display: inline-block;\n  padding: 5px;\n\n  span {\n    color: ${props => props.theme.label.color};\n  }\n  input {\n    padding: 2px 5px;\n    border: none;\n    color: ${props => props.theme.input.color};\n    background-color: ${props => props.theme.input.backgroundColor};\n  }\n  button {\n    padding: 5px 10px;\n    border: none;\n    border-radius: 5px;\n    margin-left: 5px;\n    color: ${props => props.theme.button.color};\n    background-color: ${props => props.theme.button.backgroundColor};\n\n    &:hover {\n      cursor: pointer;\n      background-color: ${props => props.theme.button.hover};\n    }\n  }\n`;\n","import React from \"react\";\nimport Scene from \"../../components/Scene/Scene\";\n\nimport Container from \"./Container\";\nimport Component from \"./Component\";\n\nconst Test = () => (\n  <Scene container={Container} component={Component} name=\"styled-components\" />\n);\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\n\nimport NativeCss from \"./benchmarks/native-css\";\nimport StyledComponentsMixed from \"./benchmarks/styled-components-mixed\";\nimport StyledComponents from \"./benchmarks/styled-components\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={() => <Home />} />\n          <Route exact path=\"/native-css/\" component={() => <NativeCss />} />\n          <Route\n            exact\n            path=\"/styled-components-mixed/\"\n            component={() => <StyledComponentsMixed />}\n          />\n          <Route\n            exact\n            path=\"/styled-components/\"\n            component={() => <StyledComponents />}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}